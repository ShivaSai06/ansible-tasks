# ---
# - hosts: localhost
#   connection: local

#   tasks:
#   - name: Create ec2 instances
#     amazon.aws.ec2_instance:
#       name: "{{ item.name }}"
#       key_name: "shiva-aws-keypair"
#       instance_type: t2.micro
#       security_group: default
#       region: ap-south-1
#       aws_access_key: "{{ec2_access_key}}"  # From vault as defined
#       aws_secret_key: "{{ec2_secret_key}}"  # From vault as defined      
#       network:
#         assign_public_ip: true
#       image_id: "{{ item.image }}"
#       tags: 
#         Environment: "{{ item.name }}"
#     loop:
#       - { image: "ami-0f535a71b34f2d44a", name: "manage-node-1" }
#       - { image: "ami-02521d90e7410d9f0", name: "manage-node-2" }
#       - { image: "ami-02521d90e7410d9f0", name: "manage-node-3" }



---
- hosts: localhost
  connection: local
  gather_facts: no

  vars:
    region: ap-south-1
    security_group_name: my-ansible-sg

  tasks:

  - name: Create a security group
    amazon.aws.ec2_group:
      name: "{{ security_group_name }}"
      description: Security group for Ansible EC2 instances
      region: "{{ region }}"
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      rules:
        - proto: tcp
          ports:
            - 22
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: -1
          cidr_ip: 0.0.0.0/0
    register: sg_info

  - name: Launch EC2 instances
    amazon.aws.ec2_instance:
      name: "{{ item.name }}"
      key_name: "shiva-aws-keypair"
      instance_type: t2.micro
      region: "{{ region }}"
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      security_group: "{{ security_group_name }}"
      network:
        assign_public_ip: true
      image_id: "{{ item.image }}"
      tags:
        Environment: "{{ item.name }}"
    loop:
      - { image: "ami-0f535a71b34f2d44a", name: "manage-node-1" }
      - { image: "ami-02521d90e7410d9f0", name: "manage-node-2" }
      - { image: "ami-02521d90e7410d9f0", name: "manage-node-3" }
